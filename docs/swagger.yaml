basePath: /
definitions:
  error.Error:
    properties:
      error_code:
        type: string
      message:
        type: string
    type: object
  handler.contractWay:
    properties:
      contract_way:
        type: string
      contract_way_type:
        type: string
    type: object
  handler.verifyInfo:
    properties:
      verify_info:
        type: string
      verify_item:
        type: string
    type: object
  model.ApplicationView:
    properties:
      applications:
        items:
          $ref: '#/definitions/model.ViewApplicationInfo'
        type: array
      msg:
        type: string
      num:
        type: integer
    type: object
  model.HistoryRequirement:
    properties:
      post_time:
        type: string
      requirement_id:
        type: integer
      tag:
        type: string
      title:
        type: string
    type: object
  model.LoginInfo:
    properties:
      pwd:
        type: string
      sid:
        type: string
    type: object
  model.RemindBox:
    properties:
      content:
        items:
          $ref: '#/definitions/model.ReminderInfo'
        type: array
      msg:
        type: string
      num:
        type: integer
    type: object
  model.RemindEx:
    properties:
      existence:
        type: boolean
      msg:
        type: string
    type: object
  model.ReminderInfo:
    properties:
      college:
        type: string
      confirm_time:
        type: string
      contact_way:
        type: string
      contact_way_type:
        type: string
      gender:
        type: string
      grade:
        type: string
      nick_name:
        type: string
      red_point:
        type: boolean
      requirement_id:
        type: integer
      status:
        type: integer
      title:
        type: string
    type: object
  model.Requirement:
    properties:
      content:
        type: string
      date:
        type: string
      place:
        type: string
      post_time:
        type: string
      require_people_num:
        type: integer
      sender_nick_name:
        type: string
      sender_portrait:
        type: integer
      tag:
        type: string
      time_end:
        type: integer
      time_from:
        type: integer
      title:
        type: string
      type:
        type: string
    type: object
  model.Requirements:
    properties:
      contact_way:
        type: string
      contact_way_type:
        type: string
      content:
        type: string
      date:
        type: integer
      place:
        type: integer
      post_time:
        type: string
      require_people_num:
        type: integer
      requirement_id:
        type: integer
      tag:
        type: integer
      time_end:
        type: integer
      time_from:
        type: integer
      title:
        type: string
      type:
        type: integer
    type: object
  model.Res:
    properties:
      msg:
        type: string
    type: object
  model.Square:
    properties:
      content:
        items:
          $ref: '#/definitions/model.requirementInSquare'
        type: array
      msg:
        type: string
      num:
        type: integer
    type: object
  model.ViewApplicationInfo:
    properties:
      application_id:
        type: integer
      college:
        type: string
      contact_way:
        type: string
      contact_way_type:
        type: string
      gender:
        type: string
      grade:
        type: string
      red_point:
        type: boolean
      requirements_id:
        type: integer
      send_time:
        type: string
      sender_nickname:
        type: string
      title:
        type: string
    type: object
  model.ViewHistoryRequirement:
    properties:
      history:
        items:
          $ref: '#/definitions/model.HistoryRequirement'
        type: array
      msg:
        type: string
      num:
        type: integer
    type: object
  model.ViewRequirement:
    properties:
      content:
        $ref: '#/definitions/model.Requirement'
        type: object
      msg:
        type: string
    type: object
  model.requirementInSquare:
    properties:
      date:
        type: string
      place:
        type: string
      requirement_id:
        type: integer
      tag:
        type: string
      title:
        type: string
    type: object
host: 47.97.74.180:9090
info:
  contact: {}
  description: 孤独星球
  license: {}
  title: lonely planet
  version: "1.0"
paths:
  /application/solve/{application_id}/:
    put:
      consumes:
      - application/json
      description: 根据请求Id来处理请求，id别的api会给出，通过状态status来处理请求，2为接受，3为拒绝
      parameters:
      - description: 状态
        in: query
        name: status
        required: true
        type: string
      - description: 请求id
        in: path
        name: application_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"msg":"success"}/{"msg":"需求已经被删除了!"}/{"msg":"已经处理过了!"}'
          schema:
            $ref: '#/definitions/model.Res'
        "400":
          description: '{"error_code":"00001", "message":"Fail."} or {"error_code":"00002",
            "message":"Lack Param Or Param Not Satisfiable."}'
          schema:
            $ref: '#/definitions/error.Error'
        "401":
          description: '{"error_code":"10001", "message":"Token Invalid."} 身份认证失败
            重新登录'
          schema:
            $ref: '#/definitions/error.Error'
        "500":
          description: '{"error_code":"30001", "message":"Fail."} 失败'
          schema:
            $ref: '#/definitions/error.Error'
      summary: 处理请求
      tags:
      - application
  /application/unsolve/:
    get:
      consumes:
      - application/json
      description: 点击申请提醒　查看所有待确认和接受的申请
      parameters:
      - description: 每页数量
        in: query
        name: limit
        required: true
        type: string
      - description: 当前请求页数，从0开始
        in: query
        name: page
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"msg":"success", "num":数量, "applications":数组，其中包含每个的id}，其中red_point字段是用来表示是否未读，即单条信息是否显示小红点'
          schema:
            $ref: '#/definitions/model.ApplicationView'
        "400":
          description: '{"error_code":"00001", "message":"Fail."} or {"error_code":"00002",
            "message":"Lack Param Or Param Not Satisfiable."}'
          schema:
            $ref: '#/definitions/error.Error'
        "401":
          description: '{"error_code":"10001", "message":"Token Invalid."} 身份认证失败
            重新登录'
          schema:
            $ref: '#/definitions/error.Error'
        "500":
          description: '{"error_code":"30001", "message":"Fail."} 失败'
          schema:
            $ref: '#/definitions/error.Error'
      summary: 申请提醒
      tags:
      - application
  /application/view_info/{application_id}/:
    post:
      consumes:
      - application/json
      description: 更新申收件人阅读状态, 需要在用户在申请提醒中点击需求或者点击小眼睛或者直接处理请求的同时, 通过请求这条来更新状态, 如果可以希望可以根据是否已读来判断是否进行此次请求以减少请求次数
      parameters:
      - description: 用户已查看的申请id, 在别的api中给出
        in: path
        name: application_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"msg":"success"} 成功'
          schema:
            $ref: '#/definitions/model.Res'
        "400":
          description: '{"error_code":"00001", "message":"Fail."} or {"error_code":"00002",
            "message":"Lack Param Or Param Not Satisfiable."}'
          schema:
            $ref: '#/definitions/error.Error'
        "401":
          description: '{"error_code":"10001", "message":"Token Invalid."} 身份认证失败
            重新登录'
          schema:
            $ref: '#/definitions/error.Error'
        "500":
          description: '{"error_code":"30001", "message":"Fail."} 失败'
          schema:
            $ref: '#/definitions/error.Error'
      summary: 更新收件人阅读状态
      tags:
      - remind
  /login/:
    post:
      consumes:
      - application/json
      description: Login
      parameters:
      - description: 学号和密码
        in: body
        name: loginInfo
        required: true
        schema:
          $ref: '#/definitions/model.LoginInfo'
      produces:
      - application/json
      responses:
        "200":
          description: '{"msg":"success"}'
          schema:
            $ref: '#/definitions/model.Res'
        "400":
          description: '{"error_code":"00001", "message":"Fail."} or {"error_code":"00002",
            "message":"Lack Param Or Param Not Satisfiable."}'
          schema:
            $ref: '#/definitions/error.Error'
        "401":
          description: '{"error_code":"20001", "message":"Password or account wrong."}
            登录失败, {"error_code":"10001", "message":"Token Invalid."} 身份认证失败 重新登录'
          schema:
            $ref: '#/definitions/error.Error'
        "500":
          description: '{"error_code":"30001", "message":"Fail."} 失败'
          schema:
            $ref: '#/definitions/error.Error'
      summary: 登录
      tags:
      - user
  /remind/day/remindbox/:
    get:
      consumes:
      - application/json
      description: 查看回复提醒
      parameters:
      - description: 每页数量
        in: query
        name: limit
        required: true
        type: string
      - description: 当前请求页数，从0开始
        in: query
        name: page
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"msg":"success", "num":数量, "content":数组，其中包含每个的id， 其中confirm是用来判断显示的内容是否带有小眼睛图标，
            2为接受，3为拒绝，其中red_point字段是用来表示是否未读，即单条信息是否显示小红点}'
          schema:
            $ref: '#/definitions/model.RemindBox'
        "400":
          description: '{"error_code":"00001", "message":"Fail."} or {"error_code":"00002",
            "message":"Lack Param Or Param Not Satisfiable."}'
          schema:
            $ref: '#/definitions/error.Error'
        "401":
          description: '{"error_code":"10001", "message":"Token Invalid."} 身份认证失败
            重新登录'
          schema:
            $ref: '#/definitions/error.Error'
        "500":
          description: '{"error_code":"30001", "message":"Fail."} 失败'
          schema:
            $ref: '#/definitions/error.Error'
      summary: 回复提醒
      tags:
      - remind
  /remind/day/remindbox/info/{application_id}/:
    post:
      consumes:
      - application/json
      description: 更新申请人阅读状态, 需要在用户在回复提醒中点击需求或者点击小眼睛的同时, 通过请求这条来更新状态, 如果可以希望可以根据是否已读来判断是否进行此次请求以减少请求次数
      parameters:
      - description: 用户已查看的申请id, 在别的api中给出
        in: path
        name: application_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"msg":"success"} 成功'
          schema:
            $ref: '#/definitions/model.Res'
        "400":
          description: '{"error_code":"00001", "message":"Fail."} or {"error_code":"00002",
            "message":"Lack Param Or Param Not Satisfiable."}'
          schema:
            $ref: '#/definitions/error.Error'
        "401":
          description: '{"error_code":"10001", "message":"Token Invalid."} 身份认证失败
            重新登录'
          schema:
            $ref: '#/definitions/error.Error'
        "500":
          description: '{"error_code":"30001", "message":"Fail."} 失败'
          schema:
            $ref: '#/definitions/error.Error'
      summary: 更新申请人阅读状态
      tags:
      - remind
  /remind/day/remindbox/status/:
    get:
      consumes:
      - application/json
      description: 根据返回值来判断是否显示提醒的小红点
      produces:
      - application/json
      responses:
        "200":
          description: '{"msg":"success", "existence":"true/false"}'
          schema:
            $ref: '#/definitions/model.RemindEx'
        "400":
          description: '{"error_code":"00001", "message":"Fail."} or {"error_code":"00002",
            "message":"Lack Param Or Param Not Satisfiable."}'
          schema:
            $ref: '#/definitions/error.Error'
        "401":
          description: '{"error_code":"10001", "message":"Token Invalid."} 身份认证失败
            重新登录'
          schema:
            $ref: '#/definitions/error.Error'
        "500":
          description: '{"error_code":"30001", "message":"Fail."} 失败'
          schema:
            $ref: '#/definitions/error.Error'
      summary: 查询是否显示小红点
      tags:
      - remind
  /requirement/{requirement_id}/:
    delete:
      consumes:
      - application/json
      description: 根据id来删除特定的需求
      parameters:
      - description: 删除需求的id，会在别的api中给出
        in: path
        name: requirement_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"msg":"success"} 成功'
          schema:
            $ref: '#/definitions/model.Res'
        "400":
          description: '{"error_code":"00001", "message":"Fail."} or {"error_code":"00002",
            "message":"Lack Param Or Param Not Satisfiable."}'
          schema:
            $ref: '#/definitions/error.Error'
        "401":
          description: '{"error_code":"10001", "message":"Token Invalid."} 身份认证失败
            重新登录'
          schema:
            $ref: '#/definitions/error.Error'
        "500":
          description: '{"error_code":"30001", "message":"Fail."} 失败'
          schema:
            $ref: '#/definitions/error.Error'
      summary: 删除已发布的需求
      tags:
      - requirement
  /requirement/apply/{requirement_id}/:
    post:
      consumes:
      - application/json
      description: 根据id来申请特定的需求
      parameters:
      - description: 申请需求的id，会在别的api中给出
        in: path
        name: requirement_id
        required: true
        type: string
      - description: 发布的需求详情
        in: body
        name: contractWay
        required: true
        schema:
          $ref: '#/definitions/handler.contractWay'
      produces:
      - application/json
      responses:
        "200":
          description: '{"msg":"success"}/{"msg":"不能申请自己的需求!"}/{"msg":"已经申请过了!"}'
          schema:
            $ref: '#/definitions/model.Res'
        "400":
          description: '{"error_code":"00001", "message":"Fail."} or {"error_code":"00002",
            "message":"Lack Param Or Param Not Satisfiable."}'
          schema:
            $ref: '#/definitions/error.Error'
        "401":
          description: '{"error_code":"10001", "message":"Token Invalid."} 身份认证失败
            重新登录'
          schema:
            $ref: '#/definitions/error.Error'
        "500":
          description: '{"error_code":"30001", "message":"Fail."} 失败'
          schema:
            $ref: '#/definitions/error.Error'
      summary: 申请需求
      tags:
      - requirement
  /requirement/create/:
    put:
      consumes:
      - application/json
      description: 用户发布需求
      parameters:
      - description: 新发布的需求详情
        in: body
        name: requirement
        required: true
        schema:
          $ref: '#/definitions/model.Requirements'
      produces:
      - application/json
      responses:
        "200":
          description: '{"msg":"success"} 成功 {"msg":"requirement already exist."}
            提示重复发布需求了'
          schema:
            $ref: '#/definitions/model.Res'
        "400":
          description: '{"error_code":"00001", "message":"Fail."} or {"error_code":"00002",
            "message":"Lack Param Or Param Not Satisfiable."}'
          schema:
            $ref: '#/definitions/error.Error'
        "401":
          description: '{"error_code":"10001", "message":"Token Invalid."} 身份认证失败
            重新登录'
          schema:
            $ref: '#/definitions/error.Error'
        "500":
          description: '{"error_code":"30001", "message":"Fail."} 失败'
          schema:
            $ref: '#/definitions/error.Error'
      summary: 发布需求
      tags:
      - requirement
  /requirement/history/:
    get:
      consumes:
      - application/json
      description: 用户历史所发布需求
      parameters:
      - description: 每页数量
        in: query
        name: limit
        required: true
        type: string
      - description: 当前请求页数，从0开始
        in: query
        name: page
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"msg":"success", "num":数量, "history":数组，其中包含每个的id}'
          schema:
            $ref: '#/definitions/model.ViewHistoryRequirement'
        "400":
          description: '{"error_code":"00001", "message":"Fail."} or {"error_code":"00002",
            "message":"Lack Param Or Param Not Satisfiable."}'
          schema:
            $ref: '#/definitions/error.Error'
        "401":
          description: '{"error_code":"10001", "message":"Token Invalid."} 身份认证失败
            重新登录'
          schema:
            $ref: '#/definitions/error.Error'
        "500":
          description: '{"error_code":"30001", "message":"Fail."} 失败'
          schema:
            $ref: '#/definitions/error.Error'
      summary: 历史发布需求
      tags:
      - requirement
  /requirement/square/:
    get:
      consumes:
      - application/json
      description: 给出用户的筛选条件，返回若干请求
      parameters:
      - description: 每页数量
        in: query
        name: limit
        required: true
        type: string
      - description: 当前请求页数，从0开始
        in: query
        name: page
        required: true
        type: string
      - description: 主类别，必要
        in: query
        name: type
        required: true
        type: string
      - description: 第二级标签
        in: query
        name: tag
        type: string
      - description: 地点，将复合条件整合为字符串
        in: query
        name: place
        type: string
      - description: 起始时间
        in: query
        name: time_from
        type: string
      - description: 终止时间
        in: query
        name: time_end
        type: string
      - description: 复合条件的日期筛选条件，如果有整合为8位字符串'1xxxxxxx'，最低位为周一
        in: query
        name: date
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"msg":"get result successful", "num":数量, "content":数组，其中包含每个的id},若数量为零msg:''none'''
          schema:
            $ref: '#/definitions/model.Square'
        "400":
          description: '{"error_code":"00001", "message":"Fail."} or {"error_code":"00002",
            "message":"Lack Param Or Param Not Satisfiable."}'
          schema:
            $ref: '#/definitions/error.Error'
        "401":
          description: '{"error_code":"10001", "message":"Token Invalid."} 身份认证失败
            重新登录'
          schema:
            $ref: '#/definitions/error.Error'
        "500":
          description: '{"error_code":"30001", "message":"Fail."} 失败'
          schema:
            $ref: '#/definitions/error.Error'
      summary: 需求广场
      tags:
      - requirement
  /requirement/view/{requirement_id}/:
    get:
      consumes:
      - application/json
      description: 根据id来查看特定的需求
      parameters:
      - description: 查看需求的id，会在别的api中给出
        in: path
        name: requirement_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"msg":"success", "content":数组，其中包含每个的id},若该需求被删除 msg:''不见啦'''
          schema:
            $ref: '#/definitions/model.ViewRequirement'
        "400":
          description: '{"error_code":"00001", "message":"Fail."} or {"error_code":"00002",
            "message":"Lack Param Or Param Not Satisfiable."}'
          schema:
            $ref: '#/definitions/error.Error'
        "401":
          description: '{"error_code":"10001", "message":"Token Invalid."} 身份认证失败
            重新登录'
          schema:
            $ref: '#/definitions/error.Error'
        "500":
          description: '{"error_code":"30001", "message":"Fail."} 失败'
          schema:
            $ref: '#/definitions/error.Error'
      summary: 查看特定需求
      tags:
      - requirement
  /user/changeInfo/:
    post:
      consumes:
      - application/json
      description: VerifyItem传入修改的板块,当前只能更改昵称
      parameters:
      - description: 修改的板块和信息
        in: body
        name: verifyInfo
        required: true
        schema:
          $ref: '#/definitions/handler.verifyInfo'
      produces:
      - application/json
      responses:
        "200":
          description: '{"msg":"success"} 成功'
          schema:
            $ref: '#/definitions/model.Res'
        "400":
          description: '{"error_code":"00001", "message":"Fail."} or {"error_code":"00002",
            "message":"Lack Param Or Param Not Satisfiable."}'
          schema:
            $ref: '#/definitions/error.Error'
        "401":
          description: '{"error_code":"10001", "message":"Token Invalid."} 身份认证失败
            重新登录'
          schema:
            $ref: '#/definitions/error.Error'
        "500":
          description: '{"error_code":"30001", "message":"Fail."} 失败'
          schema:
            $ref: '#/definitions/error.Error'
      summary: 更改用户信息
      tags:
      - user
swagger: "2.0"
